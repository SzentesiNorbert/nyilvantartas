{"remainingRequest":"e:\\Tanfolyam\\Javascript\\Modulzáró\\Éles\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!e:\\Tanfolyam\\Javascript\\Modulzáró\\Éles\\src\\frontend.vue?vue&type=script&lang=js","dependencies":[{"path":"e:\\Tanfolyam\\Javascript\\Modulzáró\\Éles\\src\\frontend.vue","mtime":1538122919838},{"path":"e:\\Tanfolyam\\Javascript\\Modulzáró\\Éles\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1538115430289},{"path":"e:\\Tanfolyam\\Javascript\\Modulzáró\\Éles\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nvar fullpath='http://localhost:3000'  // in development mode\n// var fullpath='' // in production mode\nexport default {\n  name: 'app',\n  data() {\n    return {\n      keres : '',\n      hiba  : false,\n      view  : 'list',\n      thead : [\n\n        { key: 'nev', label: 'Cég neve', sortable: true},\n        { key: 'cegnev', label: 'Partner neve', sortable: true},\n        { key: 'nev', label: 'Cím', sortable: true},\n        { key: 'tel',   label: 'Cég telefonszáma', mask:'(**)***-****', sortable: true},\n        { key: 'utrd', label: 'Utolsó tranzakció dátuma', sortable: true, 'class': 'text-center'},\n        { key: 'tel',   label: 'Cég adószám', mask:'********-*-**'},\n        { key: 'tel',   label: 'Cég nyilvántartási szám', mask:'**-**-******'},\n        { key: 'tel',   label: 'Cég bankszámla száma', mask:'********-********'},\n        { key: 'tipus',    label: 'Kapcsolat típusa', sortable: true},\n        { key: 'tipus',    label: 'Típus', sortable: true},\n        { key: '_id',    label: 'Szerk. / Törl.', 'class': 'text-right'},\n      ],\n      tbody_origin: [],\n      form: {}\n    }\n  },\n  methods: {\n    csere() {\n      this.$set( this.form, 'nev', this.form.cegnev )\n      this.$set( this.form, 'cegnev', '' )\n      let ivsi = setInterval( () => {\n        this.$refs.allnevi.focus()\n        clearInterval(ivsi)\n      }, 100 )\n    },\n    ment() {\n      if (this.form._id) {\n        this.axios\n            .post(fullpath+'/modify',this.form)\n            .then(resp => {\n              if (resp.data.n) {\n                this.view  = 'list'\n              } else {\n                this.hiba = true\n                let iv = setInterval( () => {\n                  this.hiba = false\n                  clearInterval(iv)\n                }, 1500 )\n              }\n            })\n      } else {\n        this.keres = this.form.cegnev\n        this.axios\n            .post(fullpath+'/',this.form)\n            .then(resp => {\n              if (resp.data._id) {\n                this.form._id = resp.data._id\n                this.tbody_origin.push(this.form)\n                this.view  = 'list'\n              } else {\n                this.hiba = true\n                let iv = setInterval( () => {\n                  this.hiba = false\n                  clearInterval(iv)\n                }, 1500 )\n              }\n            })\n      }\n    },\n    ujpartner() {\n      this.form = {\n            szule: new Date().getYear()+1900,\n            utrd: new Date()\n                    .toLocaleDateString('hu-HU')\n                    .split('.')\n                    .map( v=>v.trim() )\n                    .slice(0,3)\n                    .join('-')\n      }\n      this.form.cegnev=this.keres\n      this.view='uja'\n      let ivsi = setInterval( () => {\n        this.$refs.cegnevi.focus()\n        clearInterval(ivsi)\n      }, 100 )\n\n    },\n    keresenter() {\n      if (this.tbody.length === 0) this.ujpartner()\n      else if (this.tbody.length === 1) this.edit(this.tbody[0]._id)\n    },\n    edit(x) {\n      if ( this.tbody_origin.find( v => v._id == x) ) {\n        this.form = this.tbody_origin.find( v => v._id == x)\n        this.view='uja'\n      }\n    },\n    del(x) {\n      this.axios\n          .post(fullpath+'/del',{id: x})\n          .then( resp => {\n            if (resp.data.ok) {\n              this.tbody_origin =\n              this.tbody_origin.map( v => (v._id == x) ? (v._id = '', v) : v )\n              this.tbody_origin.sort( (a,b) => b._id.localeCompare(a._id) )\n              this.tbody_origin.pop()\n              this.tbody_origin.sort( (a,b) => a.nev.localeCompare(b.nev) )\n              this.keres=''\n            } else {\n              this.hiba = true\n              let iv = setInterval( () => {\n                this.hiba = false\n                clearInterval(iv)\n              }, 1500 )\n            }\n          } )\n    }\n  },\n  computed: {\n    flist() {\n      let tipusset = new Set()\n      this.tbody_origin.forEach( v=>\n        tipusset.add(v.tipus)\n      )\n      let tipuslist = []\n      tipusset.forEach( v => tipuslist.push(v) )\n      tipuslist.sort( (a,b) => a.localeCompare(b) )\n      return tipuslist\n    },\n    tbody() {\n      let kt = new RegExp(this.keres,'i')\n      return this\n              .tbody_origin\n              .filter( v =>\n                  kt.test(v.cegnev)  ||  kt.test(v.nev)  ||  kt.test(v.tipus)\n              )\n              .slice(0,10)\n    }\n  },\n  mounted() {\n    this.axios\n        .get(fullpath+'/alldata')\n        .then( resp => this.tbody_origin = resp.data.sort(\n          (a, b) => a.nev.localeCompare(b.nev)\n        ) )\n  }\n}\n",{"version":3,"sources":["frontend.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"frontend.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <div v-show=\"view==='list'\">\n        <b-navbar variant=\"dark\" type=\"dark\">\n          <b-navbar-nav href=\"#\">\n            <b-btn variant=\"light\"\n                   @click=\"ujpartner\">Új üzleti partner felvétele</b-btn>\n          </b-navbar-nav>\n          <b-nav-form action=\"#\">\n              <b-form-input\n                   class=\"mr-sm-2\"\n                   type=\"text\"\n                   placeholder=\"Üzleti partner vagy Cég\"\n                   v-model=\"keres\"\n                   @click.native=\"keres=''\"\n                   @keyup.native.enter=\"keresenter\"/>\n          </b-nav-form>\n        </b-navbar>\n    </div>\n    <div v-show=\"view==='uja' || view==='edit'\">\n        <b-navbar variant=\"dark\" type=\"dark\">\n          <b-navbar-nav href=\"#\">\n            <b-btn variant=\"light\"\n                   @click=\"view='list'\">Vissza a listához</b-btn>\n          </b-navbar-nav>\n        </b-navbar>\n    </div>\n    <div id=\"body\">\n        <div class=\"text-center cim\">Üzleti partnerek nyilvántartása</div>\n        <b-btn variant=\"light\"\n               @click=\"view='list'\">Partner Lista</b-btn>\n        <div style=\"height:4px;\"></div>\n        <div v-show=\"view==='list' && tbody.length\" class=\"kerek\">\n          <div style=\"height:13px;\"></div>\n          <b-table striped dark\n                   :fields=\"thead\"\n                   :items=\"tbody\">\n                   <template slot=\"_id\" slot-scope=\"data\">\n                        <b-btn size=\"sm\"\n                               @click=\"edit(`${data.value}`)\"\n                               variant=\"success\">Módosítás</b-btn>\n                        /\n                        <b-btn size=\"sm\"\n                               @click=\"del(`${data.value}`)\"\n                               variant=\"danger\">Törlés</b-btn>\n                   </template>\n          </b-table>\n        </div>\n        <div v-show=\"!tbody.length  && view==='list'\"\n             class=\"text-center\"><br>\n             <div v-if=\"tbody_origin.length\" class=\"red\">\n               Nincs az adatbázisban a keresési feltételnek megfelelő partner!\n             </div>\n             <div v-if=\"!tbody_origin.length\" class=\"red\">\n               Az adatbázis üres!\n             </div>\n             <br><br>\n          <b-btn variant=\"danger\"\n                 @click=\"ujpartner\">Új partner felvétele</b-btn>\n        </div>\n        <div class=\"row\" v-show=\"view==='uja' || view==='edit'\">\n          <div class=\"col\"></div>\n          <div class=\"col\">\n            <hr>\n            <h5 class=\"text-center\" v-if=\"!form._id\">Új partner felvétele</h5>\n            <h5 class=\"text-center\" v-if=\"form._id\">Adatmódosítás</h5>\n            <hr>\n            <b-form name=\"f1\">\n            Partner neve\n            <div class=\"row\">\n              <div class=\"col\">\n                <b-input placeholder=\"Partner neve\" required\n                         ref=\"allnevi\" v-model=\"form.cegnev\" />\n              </div>\n              <div v-if=\"form.cegnev && !form.nev\">\n                <b-btn @click=\"csere\">&#8675;</b-btn>\n              </div>\n            </div>\n            Cég neve\n\n            <b-input ref=\"cegnevi\" required\n                     placeholder=\"Cég neve\"\n                     v-model=\"form.nev\" />\n            Cég címe\n           <b-input ref=\"cegnevi\" required\n                    placeholder=\"Cég címe\"\n                    v-model=\"form.cim\" />\n            Cég telefonszáma\n            <b-input placeholder=\"Cég telefonszáma\" required\n                     v-model=\"form.tel\" />\n           Cég adószáma\n           <b-input placeholder=\"Cég adószáma\" required\n                    v-model=\"form.asz\" />\n          Cég nyilvántartási száma\n          <b-input placeholder=\"Cég nyilvántartási száma\" required\n                   v-model=\"form.nysz\" />\n           Cég bankszámla száma\n           <b-input placeholder=\"Cég bankszámla száma\" required\n                    v-model=\"form.bsz\" />\n            Kapcsolat tipusa\n            <b-input list=\"tipus\"\n                     placeholder=\"Tipusa\"\n                     required\n                     v-model=\"form.tipus\" />\n            <datalist id=\"tipus\">\n              <option v-for=\"tipus in flist\">{{tipus}}</option>\n            </datalist>\n        \n            Utolsó tranzakció dátuma\n            <b-input type=\"date\" list=\"tipus\"\n                     v-model=\"form.utrd\" />\n            </b-form>\n            <hr>\n            <div class=\"text-center\">\n                <b-btn v-if=\"form.cegnev && form.nev && form.tipus\"\n                       @click='ment'>Mentés</b-btn>\n            </div>\n          </div>\n          <div class=\"col\"></div>\n        </div>\n      </div>\n      <div v-if=\"hiba\" class=\"text-center red\">\n        Hálózati hiba, a módosításokat nem sikerült menteni!\n      </div>\n  </div>\n</template>\n\n<script>\nvar fullpath='http://localhost:3000'  // in development mode\n// var fullpath='' // in production mode\nexport default {\n  name: 'app',\n  data() {\n    return {\n      keres : '',\n      hiba  : false,\n      view  : 'list',\n      thead : [\n\n        { key: 'nev', label: 'Cég neve', sortable: true},\n        { key: 'cegnev', label: 'Partner neve', sortable: true},\n        { key: 'nev', label: 'Cím', sortable: true},\n        { key: 'tel',   label: 'Cég telefonszáma', mask:'(**)***-****', sortable: true},\n        { key: 'utrd', label: 'Utolsó tranzakció dátuma', sortable: true, 'class': 'text-center'},\n        { key: 'tel',   label: 'Cég adószám', mask:'********-*-**'},\n        { key: 'tel',   label: 'Cég nyilvántartási szám', mask:'**-**-******'},\n        { key: 'tel',   label: 'Cég bankszámla száma', mask:'********-********'},\n        { key: 'tipus',    label: 'Kapcsolat típusa', sortable: true},\n        { key: 'tipus',    label: 'Típus', sortable: true},\n        { key: '_id',    label: 'Szerk. / Törl.', 'class': 'text-right'},\n      ],\n      tbody_origin: [],\n      form: {}\n    }\n  },\n  methods: {\n    csere() {\n      this.$set( this.form, 'nev', this.form.cegnev )\n      this.$set( this.form, 'cegnev', '' )\n      let ivsi = setInterval( () => {\n        this.$refs.allnevi.focus()\n        clearInterval(ivsi)\n      }, 100 )\n    },\n    ment() {\n      if (this.form._id) {\n        this.axios\n            .post(fullpath+'/modify',this.form)\n            .then(resp => {\n              if (resp.data.n) {\n                this.view  = 'list'\n              } else {\n                this.hiba = true\n                let iv = setInterval( () => {\n                  this.hiba = false\n                  clearInterval(iv)\n                }, 1500 )\n              }\n            })\n      } else {\n        this.keres = this.form.cegnev\n        this.axios\n            .post(fullpath+'/',this.form)\n            .then(resp => {\n              if (resp.data._id) {\n                this.form._id = resp.data._id\n                this.tbody_origin.push(this.form)\n                this.view  = 'list'\n              } else {\n                this.hiba = true\n                let iv = setInterval( () => {\n                  this.hiba = false\n                  clearInterval(iv)\n                }, 1500 )\n              }\n            })\n      }\n    },\n    ujpartner() {\n      this.form = {\n            szule: new Date().getYear()+1900,\n            utrd: new Date()\n                    .toLocaleDateString('hu-HU')\n                    .split('.')\n                    .map( v=>v.trim() )\n                    .slice(0,3)\n                    .join('-')\n      }\n      this.form.cegnev=this.keres\n      this.view='uja'\n      let ivsi = setInterval( () => {\n        this.$refs.cegnevi.focus()\n        clearInterval(ivsi)\n      }, 100 )\n\n    },\n    keresenter() {\n      if (this.tbody.length === 0) this.ujpartner()\n      else if (this.tbody.length === 1) this.edit(this.tbody[0]._id)\n    },\n    edit(x) {\n      if ( this.tbody_origin.find( v => v._id == x) ) {\n        this.form = this.tbody_origin.find( v => v._id == x)\n        this.view='uja'\n      }\n    },\n    del(x) {\n      this.axios\n          .post(fullpath+'/del',{id: x})\n          .then( resp => {\n            if (resp.data.ok) {\n              this.tbody_origin =\n              this.tbody_origin.map( v => (v._id == x) ? (v._id = '', v) : v )\n              this.tbody_origin.sort( (a,b) => b._id.localeCompare(a._id) )\n              this.tbody_origin.pop()\n              this.tbody_origin.sort( (a,b) => a.nev.localeCompare(b.nev) )\n              this.keres=''\n            } else {\n              this.hiba = true\n              let iv = setInterval( () => {\n                this.hiba = false\n                clearInterval(iv)\n              }, 1500 )\n            }\n          } )\n    }\n  },\n  computed: {\n    flist() {\n      let tipusset = new Set()\n      this.tbody_origin.forEach( v=>\n        tipusset.add(v.tipus)\n      )\n      let tipuslist = []\n      tipusset.forEach( v => tipuslist.push(v) )\n      tipuslist.sort( (a,b) => a.localeCompare(b) )\n      return tipuslist\n    },\n    tbody() {\n      let kt = new RegExp(this.keres,'i')\n      return this\n              .tbody_origin\n              .filter( v =>\n                  kt.test(v.cegnev)  ||  kt.test(v.nev)  ||  kt.test(v.tipus)\n              )\n              .slice(0,10)\n    }\n  },\n  mounted() {\n    this.axios\n        .get(fullpath+'/alldata')\n        .then( resp => this.tbody_origin = resp.data.sort(\n          (a, b) => a.nev.localeCompare(b.nev)\n        ) )\n  }\n}\n</script>\n\n<style>\n*{\n  margin: 0;\n  padding: 0;\n  }\n@import url('https://fonts.googleapis.com/css?family=Merriweather|Roboto|Ubuntu');\nbody {\n    background-image: url('https://www.legalsupportnetwork.co.uk/sites/default/files/global%20people%20on%20blue%20ground.jpg');\n}\n#body {\n  margin:20px;\n  font-family: 'Ubuntu 40px', serif;\n  background-image: url('https://www.legalsupportnetwork.co.uk/sites/default/files/global%20people%20on%20blue%20ground.jpg');\n  border-radius: 10px;\n\n}\n.cim {\n  font-family: 'Merriweather', serif;\n  font-size: 30px;\n  text-shadow: 3px 1px 4px;\n}\n.kerek {\n  margin:6px;\n  padding:13px;\n  background-color: #6a694d;\n  color:white;\n  box-shadow: 1px 1px 50px #92dac4;\n  border-radius: 10px;\n}\n.red {\n  color:#cf3443;\n  background-color: grey;\n  font-weight: bolder;\n  margin: 20px;\n  padding: 10px;\n  box-shadow: 1px 1px 5px #000;\n  border-radius: 10px;\n}\n</style>\n"]}]}